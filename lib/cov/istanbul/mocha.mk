# Run test suite and record code coverage.
#
# This target uses [Istanbul](https://github.com/gotwarlost/istanbul) to
# transparently instrument a [Mocha](https://mochajs.org/) test suite and
# collect code coverage statistics.
#
# Writes an LCOV tracefile
# http://ltp.sourceforge.net/coverage/lcov/geninfo.1.php
.PHONY: test-cov
test-cov: $(checkstatedir)/cov/coverage.json



# Generate coverage in JSON format.
#
# The JSON object generated by Istanbul has the following format:
#
#     {
#          "/path/to/file1.js": { file1 coverage },
#          "/path/to/file2.js": { file2 coverage }
#     }
#
# The internals of the file coverage object are [intentionally not documented][1]
# since it is not a public interface.
#
# NOTE: The `_mocha` executable is used here, rather than `mocha`.  This is due
#       to the fact that `mocha` is a wrapper which spawns `_mocha` as a new
#       process.  This spawning prevents `istanbul` from instrumenting the code,
#       and so `_mocha` is used directly as a workaround.
#
# [1]: https://github.com/gotwarlost/istanbul/blob/107fe8a9c11c17e341f49d01dcf0ee5e9879287b/lib/object-utils.js
$(checkstatedir)/cov/coverage.json: $(SOURCES) $(TESTS)
	$(ISTANBUL) cover $(ISTANBULFLAGS) --report=none --dir $(checkstatedir)/cov $(shell which _mocha) -- $(MOCHAFLAGS) $(TESTS)
